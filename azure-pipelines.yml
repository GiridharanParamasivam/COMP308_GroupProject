trigger:
  - main  # Triggers pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
  # Continuous Integration (CI)
  - stage: Build
    jobs:
      - job: BuildAndTest
        displayName: 'Build and Test Job'
        steps:
          # Checkout code from GitHub
          - task: Checkout@1

          # Use a build tool (e.g., Maven for Java projects)
          - script: |
              mvn clean install
            displayName: 'Compile the project'

          # Run unit tests and generate code coverage
          - script: |
              mvn test
            displayName: 'Run unit tests'

          # Use SonarQube for static code analysis
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: 'YourSonarQubeService'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'YourProjectKey'
              cliSources: '.'

          - script: |
              sonar-scanner
            displayName: 'Run SonarQube Analysis'

  # Continuous Delivery (CD)
  - stage: Deliver
    dependsOn: Build
    jobs:
      - job: Deliver
        displayName: 'Deliver Job'
        steps:
          - script: |
              mvn package
            displayName: 'Package the project'

  - stage: DeployToDev
    dependsOn: Deliver
    jobs:
      - job: DeployToDev
        displayName: 'Deploy to Development Environment'
        steps:
          - script: echo "Deploying to Development Environment..."
            displayName: 'Mock Deploy to Dev'

  - stage: DeployToQAT
    dependsOn: DeployToDev
    jobs:
      - job: DeployToQAT
        displayName: 'Deploy to QAT Environment'
        steps:
          - script: echo "Deploying to QAT Environment..."
            displayName: 'Mock Deploy to QAT'

  - stage: DeployToStaging
    dependsOn: DeployToQAT
    jobs:
      - job: DeployToStaging
        displayName: 'Deploy to Staging Environment'
        steps:
          - script: echo "Deploying to Staging Environment..."
            displayName: 'Mock Deploy to Staging'

  - stage: DeployToProduction
    dependsOn: DeployToStaging
    jobs:
      - job: DeployToProduction
        displayName: 'Deploy to Production Environment'
        steps:
          - script: echo "Deploying to Production Environment..."
            displayName: 'Mock Deploy to Production'
